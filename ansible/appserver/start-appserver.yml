- name: Set up user
  hosts: all
  become: true
  tasks:
    - name: Create user
      user:
        name: zafar-dw18
        groups: sudo
        state: present
        shell: /bin/bash
        system: no
        createhome: yes
        home: /home/zafar-dw18
        password: "$5$LIqRxx56jdX6n6vT$j65S4frTdolTXaz0o6P2HASgP7y89B/i5tzPcZqWXJD"

- name: Docker Installation and User Configuration
  hosts: all
  become: true
  gather_facts: false
  vars:
    user: zafar-dw18
  tasks:
    - name: Install Docker Dependencies
      apt:
        update_cache: yes
        name:
          - lsb-release
          - ca-certificates
          - curl
          - gnupg

    - name: Install GPG Key for Docker
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg

    - name: Add Docker APT Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable

    - name: Install Docker Engine
      apt:
        update_cache: yes
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io

    - name: Install Docker Compose
      apt:
        name: docker-compose
        state: latest
        update_cache: yes

    - name: Install Python Dependencies
      apt:
        name: python3-pip
        state: latest
        update_cache: yes

    - name: Install Docker SDK for Python
      pip:
        name: docker
        state: latest
        executable: pip3

    - name: Add user to the docker group
      user:
        name: "{{ user }}"
        groups: docker
        append: yes
        state: present
      become: true

    - name: Install NodeSource repository GPG key
      apt_key:
        url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
        state: present

    - name: Install NodeSource repository
      apt_repository:
        repo: deb https://deb.nodesource.com/node_14.x focal main
        state: present
        filename: nodesource.list

    - name: Install Node.js version 14
      apt:
        name: nodejs
        state: present
        update_cache: yes

- name: Deploy Node Exporter with Docker
  hosts: all
  become: true
  tasks:
    - name: Pull the bitnami/node-exporter Docker image
      docker_image:
        name: bitnami/node-exporter
        source: pull

    - name: Run the Node Exporter container
      docker_container:
        name: node-exp
        image: bitnami/node-exporter
        state: started
        restart_policy: unless-stopped
        published_ports:
          - "9100:9100"

- name: Deploy Monitoring
  hosts: appserver
  become: true
  tasks:
    - name: Pull bitnami/prometheus Docker image
      docker_image:
        name: bitnami/prometheus
        source: pull

    - name: Pull grafana/grafana Docker image
      docker_image:
        name: grafana/grafana
        source: pull

    - name: Create directories for Prometheus
      file:
        path: /home/zafar-dw18/prometheus/
        state: directory
        mode: "0755"

    - name: Copy prometheus.yml configuration file
      copy:
        src: ~/ansible/resource/prometheus.yml
        dest: /home/zafar-dw18/prometheus/prometheus.yml
        mode: "0644"

    - name: Run Prometheus container
      docker_container:
        name: prom
        image: bitnami/prometheus
        state: started
        restart_policy: unless-stopped
        published_ports:
          - "9090:9090"
        volumes:
          - "/home/zafar-dw18/prometheus/prometheus.yml:/opt/bitnami/prometheus/conf/prometheus.yml"

    - name: Run Grafana container
      docker_container:
        name: dashboard
        image: grafana/grafana
        state: started
        restart_policy: always
        ports:
          - "2407:3000"

